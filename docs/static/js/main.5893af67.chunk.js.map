{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","catg","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OACI,oCAGI,0BAAMC,SAhBQ,SAACC,GAEnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAUd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAzBc,SAACP,GAExBF,EAAcE,EAAEQ,OAAOF,aCPjBG,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGpC,OADAC,QAAQC,IAAI,CAACJ,KAAGC,QAAMC,QAElB,yBAAKG,UAAU,0CAEX,yBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,+BAAKA,EAAL,O,uBCLCO,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbR,EAFa,0DAE6CS,UAAUF,GAFvD,sDAGAG,MAAOV,GAHP,cAGbW,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACZ,MAAO,CACJlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAVjC,kBAgBZc,GAhBY,4CAAH,sDCAPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA6BtC,OAtBAC,qBAAU,WAENjB,EAAQC,GACJiB,MAAK,SAAAR,GAGGf,QAAQC,IAAIc,GACZM,EAAS,CACLT,KAAMG,EACNI,SAAQ,SAS1B,CAACb,IAIIc,EDzBuBI,CAAalB,GAApCa,EAJ4B,EAI5BA,QAAaH,EAJe,EAIpBJ,KASf,OAPAZ,QAAQC,IAAIkB,GAQV,oCACE,wBAAIjB,UAAU,0CAAd,IAAyDI,EAAzD,KAECa,GAAW,uBAAGjB,UAAU,yCAAb,WAEZ,yBAAKA,UAAU,aAIXc,EAAOF,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACIU,IAAKV,EAAIlB,IACLkB,UEYPW,EApCM,WAAK,MAGc3C,mBAAU,CAAC,gBAHzB,mBAGf4C,EAHe,KAGH7C,EAHG,KAetB,OACI,oCACI,yCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAGO6C,EAAWb,KAAK,SAAAR,GAAQ,OAErB,kBAAC,EAAD,CAASmB,IAAOnB,EACPA,SAAUA,U,MC3BzCsB,IAASC,OAAQ,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.5893af67.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n       // console.log(e.target.value);\n       setinputValue(e.target.value);\n    };\n\n    const handleSubmmit = (e) => {\n\n        e.preventDefault();\n        //console.log('Submit echo');\n        if( inputValue.trim().length > 2 ){//quitando los espacios en blanco del input\n\n            setCategories(catg => [inputValue, ...catg]);\n            setinputValue('');\n        };\n    };\n\n\n    return (\n        <>\n            {/* <h2>AddCategory</h2> */}\n            {/* <h1>{inputValue}</h1> */}\n            <form onSubmit= {handleSubmmit} >\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n            </form>\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n   setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n    console.log({id,title,url});\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            {/* {img.title} */}\n            <img src={url} alt={title}/>\n            <p> {title} </p>\n        </div>\n    )\n}\n","\n\n\n\nexport const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category)}&api_key=PA99iVIwF9ic5C7xH2noxcmi870RhdWL`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map(img=>{\n                   return {\n                      id: img.id,\n                      title: img.title,\n                      url: img.images?.downsized_medium.url\n                   }\n                 });\n\n    //console.log(gifs);\n    //setimages(gifs);\n    return gifs;\n};","import React,{  }  from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({category}) => {\n\n    // const [images, setimages] = useState([]);\n\n    const {loading,data:images} = useFetchGifs(category);\n\n    console.log(loading);\n\n    //  //Ejemplo para useEffect\n    //  //const [count, setcount] = useState(0);\n\n \n\n    return (\n      <>\n        <h3 className=\"card animate__animated animate__fadeIn\"> {category} </h3>\n        \n        {loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\n\n        <div className=\"card-grid\">\n          {/* Ejemplo para useEffect. no es necesario para el ejercicio <h2> {count} </h2>\n          <button onClick= { ()=> setcount( count + 1 )  }>Count</button>  */}\n          {\n            images.map(img =>(\n              <GifGridItem\n                  key={img.id}\n                  {...img}\n              />\n            ))\n          }\n\n              {/* {images.map( (img)=> (\n                  <GifGridItem  key={ img.id }\n                                { ...img }/>\n              ))} */}\n        </div>\n      </>  \n\n\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/GetGifs\";\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n\n        getGifs(category)\n           .then(img => {\n\n\n                    console.log(img);\n                    setstate({\n                        data: img,\n                        loading:false\n                      }) \n\n\n              }\n            );     \n\n\n\n    },[category]);\n\n\n\n    return state;// {data: [], loading: true}\n};","import React, { useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\n\nconst GifExpertApp = () =>{\n\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState( ['Dragon Ball']);\n\n\n    // const handleAdd = () => {\n    //     //HunterxHunter\n    //     //Solucion 1\n    //    // setCategories([...categories, 'HunterxHunter']);\n\n    //     //solucion 2\n    //     setCategories(  cats => [...cats, 'HunterxHunter']);\n    // };\n\n    return (\n        <>\n            <h2>GifExpert</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr></hr>\n            {/* <button onClick = { handleAdd } >Agregar</button> */}\n\n            <ol>\n                {/* { categories.map( category => <li key = {category}> {category} </li> ) } */}\n                {\n                   categories.map( category => (\n\n                      <GifGrid key = {category}\n                               category={category} />\n                   )) \n                }\n            </ol>\n        </>\n    );\n}; \n\nexport default GifExpertApp;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render( <GifExpertApp/>, document.getElementById('root'));\n\n\n//const divRoot = document.querySelector('#app');\n\n//ReactDOM.render(<PrimeraApp saludo= \"hola, soy Goku\" /> , divRoot );\n//ReactDOM.render(<CounterApp value= {10} /> , divRoot );\n\n\n\n//GifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr/>\n"],"sourceRoot":""}